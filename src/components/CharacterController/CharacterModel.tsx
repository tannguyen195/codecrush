/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useAnimations, useGLTF } from "@react-three/drei";
import * as THREE from 'three';

import React, { useRef, useEffect } from 'react'
import { useAppContext } from "../../context/AppContext";

interface CharacterModelProps {
  animation: string;
  [key: string]: unknown;
}

export default function CharacterModel({ animation, ...props }: CharacterModelProps) {
  const group = useRef(null);

  const { playerColor } = useAppContext();
  const { nodes, materials, animations } = useGLTF('/models/Demon.glb')
  const { actions } = useAnimations(animations, group);

  for (const material in materials as Record<string, THREE.MeshStandardMaterial>) {
    (materials[material] as THREE.MeshStandardMaterial).metalness = -2;
    (materials[material] as THREE.MeshStandardMaterial).roughness = 1;
  }

  useEffect(() => {
    actions[animation]?.reset().fadeIn(0.24).play();
    return () => {
      actions?.[animation]?.fadeOut(0.24);
    };
  }, [animation]);

  return (
    <group ref={group} {...props} dispose={null} name="Root_Scene" castShadow receiveShadow position={[0, -0.45, 0]} >
      <group name="RootNode">
        <group name="CharacterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={25} >
          <primitive object={nodes.Root} />
        </group>
        <group name="Demon" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <skinnedMesh
            name="Demon_1"
            geometry={(nodes.Demon_1 as THREE.Mesh).geometry}
            skeleton={(nodes.Demon_1 as THREE.SkinnedMesh).skeleton}
            receiveShadow
            castShadow
          >
            <meshToonMaterial
              color={playerColor}
            />
          </skinnedMesh>
          <skinnedMesh
            name="Demon_2"
            geometry={(nodes.Demon_2 as THREE.Mesh).geometry}
            material={materials.Black}
            skeleton={(nodes.Demon_2 as THREE.SkinnedMesh).skeleton}
            receiveShadow
            castShadow
          />
          <skinnedMesh
            name="Demon_3"
            geometry={(nodes.Demon_3 as THREE.Mesh).geometry}
            material={materials.Eye_White}
            skeleton={(nodes.Demon_3 as THREE.SkinnedMesh).skeleton}
            receiveShadow
            castShadow
          />
          <skinnedMesh
            name="Demon_4"
            geometry={(nodes.Demon_4 as THREE.Mesh).geometry}
            material={materials.Eye_Black}
            skeleton={(nodes.Demon_4 as THREE.SkinnedMesh).skeleton}
            receiveShadow
            castShadow
          />
        </group>
        <skinnedMesh
          name="Trident"
          geometry={(nodes.Trident as THREE.Mesh).geometry}
          material={materials.Black}
          skeleton={(nodes.Trident as THREE.SkinnedMesh).skeleton}
          position={[1.895, 1.734, -0.17]}
          scale={75.326}
          receiveShadow
          castShadow
        />
      </group>
    </group>
  )
}

useGLTF.preload('/Demon.glb')
